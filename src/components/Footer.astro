---
// Tools
import type { Lang } from "@/i18n/defaultLangOptions";

// Compositions
import Center from "./compositions/Center.astro";
import Stack from "./compositions/Stack.astro";
import Cluster from "./compositions/Cluster.astro";

// Components

import Logo from "./Logo.astro";
import Link from "./ui/Link.astro";
import Contacts from "./Contacts.astro";
import Text from "./ui/Text.astro";
import FooterSocial from "./FooterSocial.astro";

// Data
import { navData, aboutData, footerData } from "@/data/siteData";
import { getRelativeLocaleUrl } from "astro:i18n";

const currentLocale = Astro.currentLocale as Lang;

const about = aboutData[currentLocale];
const footerText = footerData[currentLocale];
---

<footer id="contacts">
  <Center
    maxWidth="125rem"
    space={{ default: "space-6", tablet: "space-7", laptop: "space-9" }}
  >
    <div class="inner">
      <FooterSocial />

      <Center
        maxWidth="87.5rem"
        space={{ default: "space-6", tablet: "space-7", laptop: "space-9" }}
      >
        <Stack space="space-16">
          <Stack space="space-14">
            <div class="logo-container">
              <Logo
                color="secondary"
                style={{ "--width": "200px" }}
                class="desktop"
              />
            </div>

            <Cluster justify="between" space="space-8">
              <div class="support">
                <Stack space="space-4">
                  <Text tagName="p" size="large" class="color-secondary">
                    {about.p1}
                  </Text>

                  <Text tagName="p" size="large" class="color-secondary">
                    {about.p2}
                  </Text>
                </Stack>
              </div>

              <div class="right">
                <nav>
                  <Stack space="space-4">
                    <Text tagName="div" size="small"
                      >{currentLocale === "ua" ? "Меню" : "Menu"}</Text
                    >
                    <Stack tagName="ul" space="space-3" role="list">
                      <li>
                        <Link
                          href={getRelativeLocaleUrl(currentLocale, "/")}
                          isHovered
                        >
                          {currentLocale === "ua" ? "Головна" : "Main"}
                        </Link>
                      </li>
                      {
                        navData[currentLocale].map(({ title, href }) => {
                          return (
                            <li>
                              <Link
                                href={
                                  href === "#contacts"
                                    ? "#contacts"
                                    : getRelativeLocaleUrl(currentLocale, href)
                                }
                                isHovered
                              >
                                {title}
                              </Link>
                            </li>
                          );
                        })
                      }
                      <li>
                        <Link
                          href="https://drive.google.com/drive/folders/1QGH1H3SXX9drfj-fXg08NhBZpV2mNrZI"
                          target="_blank"
                          isHovered
                          isExternal
                        >
                          Press Kit
                        </Link>
                      </li>
                    </Stack>
                  </Stack>
                </nav>

                <Contacts />
              </div>
            </Cluster>
          </Stack>

          <Cluster space="space-6" justify="between" alignItems="center">
            <div>
              <Text tagName="p" size="small" class="copyright"
                >&copy; <span>{new Date().getFullYear()}</span>
                {footerText.copy}</Text
              >
            </div>

            <div>
              <Text tagName="span" size="small">{footerText.rights}</Text>
              <Text tagName="span" size="small" class="separator">|</Text>
              <Link
                href={`${getRelativeLocaleUrl(currentLocale, "privacy-policy")}`}
                class="privacy"
                isHovered
                hoverHeight="1px">{footerText.privacyPolicy}</Link
              >
            </div>
          </Cluster>
        </Stack>
      </Center>
    </div>
  </Center>
</footer>

<style>
  @import "@styles/04-utilities/breakpoints.css";

  footer {
    padding-block: var(--space-6-fixed);
  }

  .inner {
    position: relative;
    padding-block-start: var(--space-11-fixed);
    padding-block-end: var(--space-8-fixed);
    /* height: 40vh; */
    color: var(--color-secondary);
    background-color: var(--color-accent);

    border-radius: var(--rounded-2xl);

    @media (--laptop-and-up) {
      border-radius: var(--rounded-3xl);
    }
  }

  .support {
    max-inline-size: 40ch;
  }

  .social {
    position: absolute;
    top: 0;
    /* left: 0; */
    right: 0;

    padding-block-end: var(--space-4-fixed);
    /* padding-inline-end: var(--space-4-fixed); */
    padding-inline: var(--space-4-fixed);

    /* border-bottom-right-radius: var(--rounded-2xl); */
    border-bottom-left-radius: var(--rounded-2xl);
    background-color: var(--color-white);

    @media (--tablet-and-up) {
      padding-inline: var(--space-9-fixed);
    }

    /* & .shape.right {
      top: -1px;
      right: 1px;
    }
    & .shape.left {
      left: -1px;
      bottom: 1px;
    } */

    & .shape.right {
      bottom: 1px;
      right: -1px;
    }
    & .shape.left {
      left: 1px;
      top: -1px;
    }
  }

  .social-list {
    display: flex;
    /* flex-direction: column; */
    gap: var(--space-4-fixed);
  }

  .right {
    display: flex;
    flex-direction: column;
    gap: var(--space-8-fixed);

    @media (--tablet-and-up) {
      flex-direction: row;
      gap: var(--space-11-fixed);
    }
  }

  .privacy {
    color: var(--color-secondary);
    font-size: var(--text-minus-2);
  }

  .separator {
    font-size: var(--text-minus-2);
    margin-inline: var(--space-4-fixed);
  }

  /* TEMP */
  nav li a {
    color: var(--color-secondary);
  }
</style>

<script>
  document.addEventListener("astro:page-load", () => {
    const copyrightDate = document.querySelector(
      ".copyright span"
    ) as HTMLSpanElement;
    copyrightDate.textContent = new Date().getFullYear().toString();
  });
</script>
