---
// Tools
import type { Lang } from "@/i18n/defaultLangOptions";

// Helpers
import { parseTitle } from "@/lib/helpers";

// Compositions
import Center from "@compositions/Center.astro";
import AutoGrid from "@compositions/AutoGrid.astro";


// Components
import Heading from "@ui/Heading.astro";
import YoutubeVideo from "./YoutubeVideo.astro";


const currentLocale = Astro.currentLocale as Lang;

// Data
// const apiKey = import.meta.env.YOUTUBE_API_KEY;
const apiKey = process.env.YOUTUBE_API_KEY;
const channelId = "UCCh0j7kJcOeSmOi2vJDc6Tw";

type YoutubeVideos = {
  thumbnail: string;
  title: string;
  videoId: string;
};

let youtubeVideos: YoutubeVideos[] = [];

// Using top-level await
// We don't need to woory about blocking code
// Because we are using SSG nad it will be rendered once at build

try {
  const request = await fetch(
    `https://www.googleapis.com/youtube/v3/search?key=${apiKey}&channelId=${channelId}&part=snippet,id&order=date&maxResults=3`
  );

  
  if (!request.ok) {

    console.error("Youtube API request failed", {
        status: request.status,
        message: request.statusText,
      });

    throw new Error('There was a problem with the server youtube api.');
  }
  
  const data = await request.json();

  // console.log(data.items);

  // Get desired data shape
  // &#39;
  youtubeVideos = data.items.map((item: any) => {
    return {
      thumbnail: item.snippet.thumbnails.high.url,
      title: parseTitle(item.snippet.title),
      videoId: item.id.videoId,
    };
  });

  // console.log(youtubeVideos);
} catch (error) {
  console.error(error);
  console.error("Error fetching youtube videos");
}
---

<section class="youtube">
  <Center maxWidth="87.5rem" space="space-6">

      <Heading tagName="h3" size="h6" class="color-secondary">{currentLocale === "uk" ? "Відеоархів" : "Video archive"}</Heading>

      <AutoGrid class="youtube-list" role="list" minItemWidth="265px" >
        {
          youtubeVideos.length === 0 ? (
            <></>
          ) : (
            youtubeVideos.map((video) => {
              return (
                <div role="listitem">
                  <YoutubeVideo video={video} />
                </div>
              );
            })
          )
        }
      </AutoGrid>

  </Center>
</section>

<style>
  @import "@styles/04-utilities/breakpoints.css";

  .youtube {
    padding-block: var(--space-11-fixed);
  }

  .youtube-list {
    margin-top: var(--space-10-fixed);
  }
</style>
