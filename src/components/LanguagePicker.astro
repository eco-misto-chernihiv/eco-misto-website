---
// Tools
import { Languages } from "@/i18n/defaultLangOptions";
import type { Lang } from "@/i18n/defaultLangOptions";

// Compositions
import Cluster from "@compositions/Cluster.astro";

// Components
import Text from "./ui/Text.astro";

const currentLocale = Astro.currentLocale as Lang;
---

<Cluster space="space-0" tagName="ul" class="language-picker" role="list">
  {
    Languages.map((lang) => (
      <li>
        <Text
          tagName="span"
          size="x-small"
          class={`language ${lang.value === currentLocale ? "is-active" : ""}`}
          data-value={lang.value}
        >
          {lang.name}
        </Text>
      </li>
    ))
  }
</Cluster>

<style>
  .language-picker li {
    display: flex;
    align-items: center;
    text-transform: uppercase;
    letter-spacing: 0.7px;
    font-weight: var(--font-medium);
  }
  .language-picker li:first-child::after {
    content: "/";
    margin-inline-start: 5px;
    margin-inline-end: 5px;
    font-size: var(--text-minus-3);
  }

  .language-picker :global(.language) {
    opacity: 0.5;

    transition: opacity var(--transition-default);
  }

  .language-picker :global(.language:hover) {
    cursor: pointer;
    opacity: 1;
  }

  .language-picker :global(.language.is-active) {
    opacity: 1;
  }
</style>

<script>
  const langPickers = [
    ...document.querySelectorAll(".language-picker"),
  ] as HTMLUListElement[];

  function handleClick(event: Event) {
    console.log(event.target);
    // Check if clicked element exists
    const clicked = event.target as HTMLElement;
    if (!clicked) return;

    console.log("click");

    // Check if language element is clicked
    const language = clicked.closest(".language") as HTMLSpanElement;
    if (!language) return;

    // Get lang value from span element
    const newLocale = language.getAttribute("data-value");

    // Split the url and grab only what is after locale e.g after /en/path
    const [_, locale, ...path] = window.location.pathname.split("/");

    // Re-assemble the url with new locale
    // TODO: sanitize?
    window.location.assign(`/${newLocale}/${path.join("/")}`);
  }

  langPickers.forEach((langPicker) =>
    langPicker.addEventListener("click", handleClick)
  );
</script>
