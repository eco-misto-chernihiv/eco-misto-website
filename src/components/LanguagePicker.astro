---
// Tools
import { Languages } from "@/i18n/defaultLangOptions";
import type { Lang } from "@/i18n/defaultLangOptions";

// Compositions

// Components
import Button from "./ui/Button.astro";

// Types

const colorOptions = {
  secondary: "secondary",
  accent: "accent",
} as const;

const sizeOptions = {
  medium: "medium",
  large: "large",
} as const;

interface Props {
  color?: keyof typeof colorOptions;
  size?: keyof typeof sizeOptions;
}

// Props
const { color = "accent", size = "large" } = Astro.props;

// Translations
const currentLocale = Astro.currentLocale as Lang;
---

<div class="language-picker">
  {
    Languages.map((lang) => {
      return lang.value !== currentLocale ? (
        <Button
          class="lang-button"
          style={color}
          variant="round"
          size={size}
          isDefault={false}
          data-lang={lang.value}
        >
          {lang.name}
        </Button>
      ) : (
        ""
      );
    })
  }
</div>

<style>
  .language-picker button {
    line-height: 1;
    text-transform: uppercase;
    font-weight: var(--font-medium);
    font-size: var(--text-minus-2);
  }
</style>

<script>
  const langContainers = [
    ...document.querySelectorAll(".language-picker"),
  ] as HTMLDivElement[];

  function handleClick(event: Event) {
    // Check if clicked element exists
    const clicked = event.target as HTMLInputElement;
    if (!clicked) return;

    // Select and check if input exits
    const langButton = clicked.closest(".lang-button") as HTMLInputElement;
    if (!langButton) return;

    // Select and check if parentElement exists
    const langContainer = langButton.parentElement;
    if (!langContainer) return;

    // // Get lang value from span element
    const newLocale = langButton.getAttribute("data-lang");

    // // Split the url and grab only what is after locale e.g after /en/path
    const [_, locale, ...path] = window.location.pathname.split("/");

    // // Re-assemble the url with new locale
    // // TODO: sanitize?
    window.location.assign(`/${newLocale}/${path.join("/")}`);
  }

  langContainers.forEach((langContainer) =>
    langContainer.addEventListener("click", handleClick)
  );
</script>
