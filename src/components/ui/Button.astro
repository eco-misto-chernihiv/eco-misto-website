---
const variantOptions = {
  button: "button",
  icon: "icon",
  chip: "chip",
} as const;

const styleOptions = {
  primary: "primary",
  secondary: "secondary",
  accent: "accent",
  ghost: "ghost",
} as const;

const sizeOptions = {
  "x-small": "x-small",
  small: "small",
  large: "large",
  "x-large": "x-large",
} as const;

type Props = {
  tagName?: "a" | "button";
  class?: string;
  style: keyof typeof styleOptions;
  size?: keyof typeof sizeOptions;
  variant?: keyof typeof variantOptions;
  isDefault?: boolean;
  isInverted?: boolean;
  [key: string]: any;
};

const {
  class: classList,
  tagName = "button",
  style,
  size = "large",
  variant = "button",
  isDefault = true,
  isInverted = false,
  ...rest
} = Astro.props;

const Tag = tagName;
---

<Tag
  class:list={[
    "button",
    classList,
    { default: isDefault },
    { inverted: isInverted },
  ]}
  data-style={styleOptions[style]}
  data-size={sizeOptions[size]}
  data-variant={variantOptions[variant]}
  {...rest}
>
  <span>
    <slot />
  </span>
</Tag>

<style>
  .button span {
    /* Optical alignment */
    display: block;
    transform: translateY(1px);
  }
</style>
