---
type spaceOptions =
  | "space-0"
  | "space-1"
  | "space-2"
  | "space-3"
  | "space-4"
  | "space-5"
  | "space-6"
  | "space-7"
  | "space-8"
  | "space-9"
  | "space-10"
  | "space-11"
  | "space-12"
  | "space-13"
  | "space-14"
  | "space-15"
  | "space-16"
  | "space-17"
  | "space-18"
  | "space-19";

type Props = {
  class?: string;
  space?: spaceOptions;
  direction?: "left" | "right";
  duration?: "slow" | "fast";
  [key: string]: any;
};
const {
  space = "space-4",
  class: classList,
  direction = "left",
  duration,
  ...rest
} = Astro.props;

const marqueeGap = `var(--${space}-fixed)`;
---

<div
  class="marquee"
  class:list={[classList]}
  {...rest}
  data-direction={direction}
  data-duration={duration}
>
  <slot />
</div>

<style is:global define:vars={{ marqueeGap }}>
  /* Based on this tutorial:
    * https://www.youtube.com/watch?v=iLmBy-HKIAw
     */

  .marquee {
  }

  .marquee > .marquee-inner {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: var(--marqueeGap);
  }

  .marquee[data-animated="true"] {
    overflow: hidden;
    -webkit-mask: linear-gradient(
      90deg,
      transparent,
      white 20%,
      white 80%,
      transparent
    );
    mask: linear-gradient(
      90deg,
      transparent,
      white 20%,
      white 80%,
      transparent
    );
  }

  .marquee[data-animated="true"] > .marquee-inner {
    width: max-content;
    flex-wrap: nowrap;
    animation: marquee var(--_animation-duration, 35s)
      var(--_animation-direction, forwards) linear infinite;
  }

  /* Pause on hover */
  .marquee[data-animated="true"]:hover > .marquee-inner {
    animation-play-state: paused;
  }

  /* Animation Direction  */

  .marquee[data-direction="right"] {
    --_animation-direction: reverse;
  }

  .marquee[data-direction="left"] {
    --_animation-direction: forwards;
  }

  /* Animation Duration */

  .marquee[data-duration="slow"] {
    --_animation-duration: 60s;
  }

  .marquee[data-duration="fast"] {
    --_animation-duration: 20s;
  }

  @keyframes marquee {
    to {
      transform: translateX(calc(-50% - var(--marqueeGap) / 2));
    }
  }
</style>

<script>
  document.addEventListener("astro:page-load", () => {
    // Select all marquee elements
    const marquues = [...document.querySelectorAll(".marquee")];

    /**
     * Adds marquee animation to an marquee inner
     */
    function addAnimation() {
      // Loop through all marquees
      marquues.forEach((marquee) => {
        // Set animated state
        marquee.setAttribute("data-animated", "true");

        // Select inner element
        const marqueeInner = marquee.querySelector(
          ".marquee-inner"
        ) as HTMLElement;

        // Select all children elements
        const marqueeContent = [...marqueeInner.children];

        // Create temporary placeholder
        const fragment = new DocumentFragment();

        // Loop through marquee children
        marqueeContent.forEach((item) => {
          // Duplicate content item
          const duplicate = item.cloneNode(true) as HTMLElement;
          // Hide duplicated item from screenreader
          duplicate.setAttribute("aria-hidden", "true");

          // Add to a fragment
          fragment.append(duplicate);
        });

        // Add all duplicates to an inner element
        marqueeInner.append(fragment);
      });
    }

    // Only add animation if reduced motion is disabled
    if (!window.matchMedia("(prefers-reduced-motion: reduce)").matches) {
      addAnimation();
    }
  });
</script>
