---
// Tools
import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";
import { getTimePeriod } from "@/lib/helpers";

// Helpers
import { getProjectIdWithoutLang } from "@/i18n/getProjectIdWithoutLang";
import type { Lang } from "@/i18n/defaultLangOptions";

// Compositions
import Stack from "./compositions/Stack.astro";
import Frame from "./compositions/Frame.astro";
import Cluster from "./compositions/Cluster.astro";

// Components
import Text from "./ui/Text.astro";
import Heading from "./ui/Heading.astro";
import Link from "./ui/Link.astro";
import ProjectCard from "./ProjectCard.astro";
import TimePeriod from "./TimePeriod.astro";

// Assets

// Data
import { buttonsData } from "@/data/siteData";
import { getRelativeLocaleUrl } from "astro:i18n";

// Types
type Props = {
  project: CollectionEntry<"projects">;
};

// Props
const { project } = Astro.props;
const { title, description, cover, period } = project.data;

const projectId = getProjectIdWithoutLang(project.id);

// Throw error if someone accidentally forgot to define period
if (!period) throw new Error(`Period is missing for project: ${projectId}`);

const timePeriod = getTimePeriod(period);

const currentLocale = Astro.currentLocale as Lang;
const buttons = buttonsData[currentLocale];
---

<ProjectCard class="archive-project">
  <Link href={getRelativeLocaleUrl(currentLocale, `/projects/${projectId}`)}>
    <Cluster
      class="wrapper"
      alignItems="center"
      space={{ default: "space-4", tablet: "space-7" }}
      noWrap
    >
      <Frame ratio="1:1" class="img-wrapper">
        <Image
          src={cover.image}
          alt={cover.alt}
          transition:name={`${projectId}-image`}
        />
      </Frame>
      <Stack space="space-3" class="info">
        <Stack space="space-2">
          <TimePeriod>
            {timePeriod}
          </TimePeriod>

          <Heading
            tagName="h4"
            size="h6"
            class="title font-heading color-secondary"
            transition:name={`${projectId}-title`}>{title}</Heading
          >
        </Stack>
        <Text
          tagName="p"
          size="medium"
          class="color-dark-gray description"
          transition:name={`${projectId}-description`}>{description}</Text
        >
      </Stack>

      <div class="arrow-right-container">
        <span class="arrow-right-text">{buttons.view}</span>
        <Icon
          name="icon-arrow-right"
          aria-hidden="true"
          focusable="false"
          class="color-primary arrow-right"
        />
      </div>
    </Cluster>
  </Link>
</ProjectCard>

<style>
  @import "@styles/04-utilities/breakpoints.css";

  .archive-project {
    padding: var(--_offset);

    border-radius: var(--rounded-3xl);
    transition: background-color var(--transition-default);
  }

  /* TODO: ENABLE WHEN NEEDED
  * rewatch video for a proper selector 
  * Show only 3 first projects 
  
  .archive-project:nth-child(n + 4) {
    display: none;
  }
*/
  .archive-project:not(:first-child)::before {
    content: "";
    display: block;
    padding-block-start: var(--space-7-fixed);
    border-block-start: 2px solid var(--color-gray-200);
  }

  .archive-project .info {
    max-width: 70ch;
    transition: transform 500ms var(--ease-out);

    @media (--tablet-and-up) {
      padding-inline-end: var(--space-6-fixed);
    }
  }

  /* Override base description styles */
  .archive-project .description {
    max-width: 100%;

    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
    overflow: hidden;
  }

  /* Custom styles for cover */
  .archive-project .img-wrapper {
    --_border-radius: var(--rounded-xl);
    --_img-size: 6.5rem;

    /* Keep image from stretching */
    flex-shrink: 0;

    width: var(--_img-size);
    border-radius: var(--_border-radius);
    align-self: flex-start;

    @media (--tablet-and-up) {
      --_img-size: 12rem;
    }

    @media (--laptop-and-up) {
      --_border-radius: var(--rounded-2xl);
      /* --_img-size: 15rem; */
    }
  }

  .archive-project .arrow-right-container {
    align-self: flex-end;
    flex-shrink: 0;

    display: flex;
    gap: var(--space-1);

    color: var(--color-primary);

    margin-inline-start: auto;

    @media (--tablet-and-up) {
      align-self: auto;
    }
  }

  .archive-project .arrow-right-text {
    display: none;

    @media (--laptop-and-up) {
      display: inline;
    }
  }

  /* Override project card settings for arrow icon */
  .archive-project .arrow-right {
    transform: translateY(-2px) rotate(-45deg);
  }

  /* State */

  .archive-project:hover .info {
    transform: translateX(0.5rem);
  }

  /* Override project card settings for arrow icon */
  .archive-project:hover .arrow-right {
    transform: translateY(-2px) rotate(0deg);
  }
</style>
