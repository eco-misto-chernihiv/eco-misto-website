---
// Tools
import { Icon } from "astro-icon/components";
import type { Lang } from "@/i18n/defaultLangOptions";

// Compositions
import Cluster from "./compositions/Cluster.astro";

// Componnets
import Logo from "./Logo.astro";
import MainNav from "./MainNav.astro";
import Button from "./ui/Button.astro";
import LanguagePicker from "./LanguagePicker.astro";

// Data
import { buttonsData } from "@/data/siteData";

const currentLocale = Astro.currentLocale as Lang;
const buttons = buttonsData[currentLocale];
---

<header class="is-visible">
  <div class="wrapper">
    <Cluster isCenterMiddle alignItems="center" class="header-inner desktop">
      <Logo color="primary" style={{ "--width": "160px" }} />

      <MainNav color="accent" />

      <Cluster
        space="space-6"
        class="support-action"
        alignItems="center"
        justify="end"
      >
        <LanguagePicker />

        <Cluster space="space-0" justify="end">
          <Button
            style="primary"
            size="small"
            class="support"
            data-open-donate
            aria-label="Open donate form modal"
            >{buttons.support}
            <Icon
              name="icon-heart"
              aria-hidden="true"
              focusable="false"
            /></Button
          >
        </Cluster>
      </Cluster>
    </Cluster>

    <Cluster alignItems="center" justify="between" class="header-inner mobile">
      <Logo color="primary" style={{ "--width": "136px" }} />

      <Cluster alignItems="center" space="space-2">
        <LanguagePicker />
        <Button
          variant="icon"
          style="ghost"
          aria-label="Open main menu"
          data-open-mobile-menu
          isDefault={false}
          class="open-menu"
        >
          <Icon name="icon-menu" size={32} />
          <span class="sr-only">Open main menu</span>
        </Button>
      </Cluster>
    </Cluster>
  </div>
</header>

<style>
  @import "@styles/04-utilities/breakpoints.css";

  /* Custom breakpoint */
  @custom-media --tablet-l-and-up (width >= 48em);

  /* Hide language picker at 810px */
  @custom-media --tablet-xl-and-up (width >= 51.875em);

  header {
    --_header-primary: var(--color-primary);
    --_header-secondary: var(--color-secondary);
    --_header-accent: var(--color-accent);

    --_padding: var(--space-6-fixed);

    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    /* width: 100%; */
    z-index: 9999;

    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    margin: 0 auto;

    max-width: 125rem;
    height: var(--header-height);

    padding-inline: var(--_padding);

    background-color: transparent;

    transform: translateY(-100%);
    transition:
      transform 340ms var(--ease),
      max-width 800ms cubic-bezier(0.135, 0.9, 0.15, 1);

    @media (--tablet-and-up) {
      --_padding: var(--space-7-fixed);
    }
  }

  header :global(.logo) {
    color: var(--_header-primary);
  }

  .wrapper {
    --_border-radius: var(--rounded-3xl);

    width: 100%;
    padding-inline: var(--space-5-fixed);
    padding-block: var(--space-1-fixed);

    border-radius: var(--_border-radius);

    background-color: var(--color-secondary);

    transition:
      background-color 300ms var(--ease),
      padding 300ms var(--ease),
      border-radius 300ms var(--ease);

    @media (--tablet-and-up) {
      padding-inline: var(--space-7-fixed);
    }

    @media (--tablet-l-and-up) {
      padding-block: var(--space-3-fixed);
    }
  }

  .open-menu {
    color: var(--_header-primary);
    padding: 0;
    transition: opacity var(--transition-default);

    &:hover {
      opacity: 0.5;
    }
  }

  /*
  * STATES 
  */

  /* Fixed header  */

  header.fixed {
    --_header-primary: var(--color-secondary);
    --_header-secondary: var(--color-primary);
    --_header-accent: var(--color-secondary);

    max-width: 60rem;
  }

  header.fixed .wrapper {
    background-color: var(--color-primary);
  }

  /* Somehow i can't target nav from here, so i use :global directive */

  /* header.fixed .open-menu {
    color: var(--color-secondary);
  } */

  /* Show/hide header */

  header.is-visible {
    transform: translateY(0);
  }

  /* Responsive header */

  header .mobile {
    /* display: none; */
    @media (--tablet-xl-and-up) {
      display: none;
    }
  }

  header .desktop {
    display: none;

    @media (--tablet-xl-and-up) {
      display: flex;
    }
  }
</style>

<script>
  import { getBasePath } from "@/lib/helpers";

  // Fixed header
  const header = document.querySelector("header") as HTMLElement;
  const supportButton = header.querySelector(".support");

  const THRESHOLD = 8 as number;

  window.addEventListener("scroll", () => {
    const scrollTop = window.scrollY || document.documentElement.scrollTop;

    if (scrollTop > THRESHOLD) {
      header?.classList.add("fixed");
      supportButton?.setAttribute("data-style", "secondary");
      // supportButton?.classList.remove("primary");
    } else {
      header?.classList.remove("fixed");
      // supportButton?.classList.remove("secondary");
      supportButton?.setAttribute("data-style", "primary");
    }
  });

  // Set active state on site-nav
  const { pathname } = window.location;

  // TODO: Adjust to select a mobile navigation
  const activeNavigationElements = [
    ...document.querySelectorAll(
      `.site-nav a[href="${getBasePath(pathname)}"]`
    ),
  ];

  activeNavigationElements.forEach((navElement) => {
    if (navElement) {
      navElement.classList.add("active");
    }
  });
</script>
